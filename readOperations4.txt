:> Methods, Filters & Operators
:> Query Selectors (READ)
:> Projection Operators (READ)
---------------------------------
example:
>db.myCollection.find({age: {$gt:32 } })
//$gt->Operator/rangeFilter ,age:32-> filter
--------------
OPERATORS:
>READ : (Query & Projection) >Query Selectors($gt), Projection Operators
>Update: (Fields, Arrays)
>Aggregation (Pipeline stages, Pipeline Operators)--AGGREGATION MODULE
--------------
How Operators impact data?
type: purpose : example
>Query Operator : locate Data : $eq,$gt
>Projection Operator: Modify data presentation : $
>Update Operator: Modify+add additional data : $inc
---------------------
Query Selectors :(Comparison,Evaluation,Logical,Array,Element,Comments, Geospatial))
Projection Operators:($, $elemMatch,$meta,$slice)

-----------
findOne() & find() :
->find()  \\gives back us cursor
---------------------------
Query & Projection Operators: Refer to MongoDB docs,
 --$in &$nin( in or notIn option)
>db.movies.find({runtime: {$in:[30,42]} }).pretty()
---------
$or & $nor conditon:
>db.movies.find({$or: [{"rating.average":{$lt:5} },{"rating.average": {$gt:9.3} }] }).pretty()
$and
>db.movies.find({$and: [{"rating.average":{$gt:9}},{genres:"Drama" }]  }).count()
or
>db.movies.find({"rating.average": {$gt:9},genres:"Drama" }).count()
$not:
>db.movies.find({runtime: {$not: {$eq:60}}}).count()

----------------------------
$exists, $type, $regex
>db.users.find({age: {$exists:true, $gt:30}} ).pretty()
>db.users.find({age: {$exists: true, $ne:null}}).pretty()

>db.users.find({phone: {$type: "number"}}).pretty()
>db.users.find({phone: {$type:["double","string"]}}).pretty()

$regex: when we want to find a text snippet from a summary-attribute,
>db.movies.find({summary: {$regex: /musical/}}).pretty()
//finds all doc. in which summary has 'musical' keyword,based on INDEXING\

>db.sales.insertMany([{volume:100, target:120},{volume:89,target:80},{volume:200,target:170}])
>db.sales.find({$expr: {$gt: [volume, target]} })

>db.sales.find({$expr: {$gt: ["$volume", "$target"]} }).pretty()
//returns where volume> target,
>db.sales.find({$expr: {$gt:[{$cond: {if:["volume",190]}, then:{$subtract: ["$volume",10]},else:"$volume" }},"$target" ]} }).pretty()



























